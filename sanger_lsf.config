manifest {
    name = 'modified from The Wellcome Sanger Institute HPC cluster profile by Anthony Underwood (@aunderwo)'
    description = 'original config by Anthony Underwood (@aunderwo) https://www.sanger.ac.uk/group/informatics-support-group/'
}

params {
    max_memory = 128.GB
    max_cpus = 64
    max_time = 48.h
}


singularity {
    enabled = true
    cacheDir = "${projectDir}/singularity"
    autoMounts = true
}


process {
    executor = 'lsf'
    errorStrategy = { task.attempt <= 5 ? "retry" : "finish" }
    maxRetries = 5
    withName: conpairPileup {
        memory = '10 GB'
        queue = 'normal'
        cpus = 1
    }
    withName: verifyConcordance {
        memory = '500 MB'
        queue = 'normal'
        cpus = 1
    }
    withName: conpairContamination {
        memory = '1000 MB'
        queue = 'normal'
        cpus = 1
    }
    withName: conpairFilter {
        memory = '1000 MB'
        queue = 'normal'
        cpus = 1
    }
    withName: hairpinFilter {
        memory = '12 GB'
        queue = 'long'
        cpus = 1
    }
    withName: pindelFilter {
        memory = '500 MB'
        queue = 'normal'
        cpus = 1
    }
    withName: cgpVaf {
        memory = { 2000.MB * task.attempt }
        queue = 'normal'
        cpus = 1
    }
    withName: betaBinomFilterIndex {
        memory = { 500.MB * task.attempt }
        queue = 'normal'
        cpus = 1
    }
    withName: betaBinomFilter {
        memory = '100 MB'
        queue = 'normal'
        cpus = 1
    }
    withName: getPhylogeny {
        memory = '100 MB'
        queue = 'normal'
        cpus = 1
    }
    withName: matrixGeneratorOnSamples {
        memory = '500 MB'
        queue = 'normal'
        cpus = 2
    }
    withName: matrixGeneratorOnBranches {
        memory = '500 MB'
        queue = 'normal'
        cpus = 2
    }
    withName: concatMatrices {
        memory = '500 MB'
        queue = 'normal'
        cpus = 1
    }
    withName: sigprofilerPlotSnp {
        memory = '500 MB'
        queue = 'normal'
        cpus = 1
    }
}

executor{
    name = 'lsf'
    perJobMemLimit = true
    poolSize = 4
    submitRateLimit = '5 sec'
    killBatchSize = 50
}

